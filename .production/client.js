(()=>{"use strict";var __webpack_exports__={};const reISO=/^(\d{4})-(\d{2})-(\d{2})T(\d{2}):(\d{2}):(\d{2}(?:\.\d*))(?:Z|(\+|-)([\d|:]*))?$/;const reMsAjax=/^\/Date\((d|-|.*)\)[\/|\\]$/;function dateParser(key,value){if(typeof value==="string"){let a=reISO.exec(value);if(a)return new Date(value);a=reMsAjax.exec(value);if(a){const b=a[1].split(/[-+,.]/);return new Date(b[0]?+b[0]:0- +b[1])}}return value};function deserialize(string){return JSON.parse(string,dateParser)};;const state=deserialize(decodeURIComponent(document.querySelector(`[name=nullstack]`).content));const client_state=state;function fragment({children}){return children};;function flattenChildren(children){children=[].concat.apply([],children).map(child=>{if(child===null||child===undefined)return false;return child});return[].concat.apply([],children)}function element_element(type,props,...children){children=flattenChildren(children);if(type==="textarea"){children=[children.join("")]}const attributes={...props,children};if(type==="element"){type=attributes.tag||fragment;delete attributes.tag}if(typeof type==="function"&&type.render!==undefined){return{type,attributes,children:null}}return{type,attributes,children}};;function generateKey(node,depth){if(depth.length===1)return"application";return node.type.name+"/"+depth.join("-")};;function isUndefined(node){if(node===undefined)return true;return node.hasOwnProperty("type")&&node.type===undefined}function isFalse(node){if(node===null||node===false)return true;return(node===null||node===void 0?void 0:node.hasOwnProperty("type"))&&node.type===null||node.type===false}function isClass(node){return typeof node.type==="function"&&node.type.prototype&& typeof node.type.prototype.render==="function"}function isFunction(node){return typeof node.type==="function"}function isText(node){return typeof node.children==="undefined"};function extractLocation(originalUrl){let[target,hash]=originalUrl.split("#");let[path,search]=target.split("?");if(path!=="/"&&path.endsWith("/")){path=path.substring(0,path.length-1)}let url=path;if(search){url+="?"+search}let urlWithHash=url;if(hash){urlWithHash+="#"+hash}if(hash===undefined){hash=""}return{path,search,url,urlWithHash,hash}};;function extractParamValue(value){if(value==="true")return true;if(value==="false")return false;return value?decodeURIComponent(value.replace(/\+/g," ")):""};;function routeMatches(url,route){let{path}=extractLocation(url);const urlPaths=path.split("/");const routePaths=route.split("/");const params={};const length=Math.max(urlPaths.length,routePaths.length);let catchall=false;for(let i=0;i<length;i++){if(catchall){continue}else if(routePaths[i]==="*"){catchall=true}else if(routePaths[i]&&routePaths[i].startsWith(":")){const key=routePaths[i].replace(":","");params[key]=extractParamValue(urlPaths[i])}else if(routePaths[i]!==urlPaths[i]){return false}}return params};;function erase(node){node.type=false;delete node.attributes;delete node.children}function match(node){return node&&node.attributes!==undefined&&node.attributes.route!==undefined}function load({router}){router._routes={};if(!router._oldSegments){router._oldSegments={};router._newSegments={}}else{router._oldSegments=router._newSegments;router._newSegments={}}}function transform({node,depth,router}){if(!match(node))return;const routeDepth=depth.slice(0,-1).join(".");if(router._routes[routeDepth]!==undefined){erase(node)}else{const params=routeMatches(router.url,node.attributes.route);if(params){router._routes[routeDepth]=true;router._newSegments[routeDepth]=params;Object.assign(router._segments,params)}else{erase(node)}}}const routable={load,transform,client:true,server:true};function attachEvent(node){const target=node.attributes.source;let eventName="oninput";let valueName="value";if(node.attributes.type==="checkbox"||node.attributes.type==="radio"){eventName="onclick";valueName="checked"}else if(node.type!=="input"&&node.type!=="textarea"){eventName="onchange"}const originalEvent=node.attributes[eventName];node.attributes[eventName]=({event,value})=>{if(valueName=="checked"){target[node.attributes.bind]=event.target[valueName]}else if(target[node.attributes.bind]===true||target[node.attributes.bind]===false){target[node.attributes.bind]=event?event.target[valueName]=="true":value}else if(typeof target[node.attributes.bind]==="number"){target[node.attributes.bind]=parseFloat(event?event.target[valueName]:value)||0}else{target[node.attributes.bind]=event?event.target[valueName]:value}if(originalEvent!==undefined){setTimeout(()=>{originalEvent({...node.attributes,event,value})},0)}}}function bindable_match(node){return node!==undefined&&node.attributes!==undefined&&node.attributes.bind!==undefined&&node.attributes.source!==undefined}function bindable_transform({node,environment}){if(!bindable_match(node))return;const target=node.attributes.source;if(node.type==="textarea"){node.children=[target[node.attributes.bind]]}else if(node.type==="input"&&node.attributes.type==="checkbox"){node.attributes.checked=target[node.attributes.bind]}else{node.attributes.value=target[node.attributes.bind]||""}node.attributes.name=node.attributes.name||node.attributes.bind;if(environment.client){attachEvent(node)}}const bindable={transform:bindable_transform,client:true,server:true};function camelize(key){return key.toLowerCase().replace(/[^a-zA-Z0-9]+(.)/g,(m,chr)=>chr.toUpperCase())}function kebabize(key){return key.replace(/([a-z0-9]|(?=[A-Z]))([A-Z])/g,"$1-$2").toLowerCase()};;function datable_match(node){return node&&node.attributes!==undefined}function datable_transform({node}){if(!datable_match(node))return;node.attributes.data=node.attributes.data||{};for(const attribute in node.attributes){if(attribute.startsWith("data-")){const key=camelize(attribute.slice(5));node.attributes.data[key]=node.attributes[attribute]}}for(const key in node.attributes.data){const attribute="data-"+kebabize(key);node.attributes[attribute]=node.attributes.data[key]}}const datable={transform:datable_transform,client:true,server:true};function serializeParam(value){return value&&value.toJSON!==undefined?value.toJSON():value};;function serializeSearch(params){const keys=Object.keys(params);return keys.map(key=>{if(params[key]===false||!!params[key]){return`${key}=${params[key]}`}else{return""}}).filter(segment=>!!segment).join("&")};;function parameterizable_match(node){return node&&node.attributes&&(node.attributes.params||node.attributes.path)}function parameterizable_transform({node,router,params}){if(!parameterizable_match(node))return;let serializedParams;if(node.attributes.params){serializedParams={};for(const key in node.attributes.params){serializedParams[key]=serializeParam(node.attributes.params[key])}}else{serializedParams=params}const search=serializeSearch(serializedParams);const path=node.attributes.path||router.path;node.attributes.href=path+(search?"?":"")+search;delete node.attributes.path;delete node.attributes.params}const parameterizable={transform:parameterizable_transform,client:true,server:true};function anchorable_match(node){return node&&node.type==="a"&&node.attributes.href&&node.attributes.href.startsWith("/")&&!node.attributes.target}function anchorable_transform({node,router}){if(!anchorable_match(node))return;const originalEvent=node.attributes.onclick;node.attributes.default=true;node.attributes.onclick=({event})=>{if(!event.ctrlKey&&!event.shiftKey&&!event.altKey&&!event.metaKey){event.preventDefault();router.url=node.attributes.href}if(originalEvent){setTimeout(()=>{originalEvent({...node.attributes,event})},0)}}}const anchorable={transform:anchorable_transform,client:true};function objectable_match(node){return node&&node.attributes!==undefined}function objectable_transform({node}){if(!objectable_match(node))return;for(const attribute in node.attributes){if(attribute.startsWith("on")&& typeof node.attributes[attribute]==="object"){const target=node.attributes.source;const object=node.attributes[attribute];node.attributes[attribute]=(function(){Object.assign(target,object)}).bind(target)}}}const objectable={transform:objectable_transform,client:true};let plugins=[objectable,parameterizable,anchorable,routable,datable,bindable];function transformNodes(scope,node,depth){for(const plugin of plugins){plugin.transform({...scope.context,node,depth})}}function loadPlugins(scope){for(const plugin of plugins){plugin.load&&plugin.load(scope.context)}return plugins}function usePlugins(environment){return async(...userPlugins)=>{plugins=[...new Set([...userPlugins.flat(),...plugins])].filter(plugin=>plugin[environment])}};async function generateBranch(parent,node,depth,scope){transformNodes(scope,node,depth);if(isUndefined(node)){let message="Attempting to render an undefined node. \n";if(node===undefined){message+="This error usually happens because of a missing return statement around JSX or returning undefined from a renderable function."}else{message+="This error usually happens because of a missing import statement or a typo on a component tag"}throw new Error(message);return}if(isFalse(node)){parent.children.push(false);return}if(isClass(node)){const key=node.attributes.key?node.attributes.key:generateKey(node,depth)+(node.attributes.route?scope.context.environment.mode==="ssg"?scope.context.router.path:scope.context.router.url:"");if(scope.context.environment.client&&scope.context.router._changed&&node.attributes&&node.attributes.route&&scope.context.environment.mode!=="ssg"){const routeDepth=depth.slice(0,-1).join(".");const newSegments=scope.context.router._newSegments[routeDepth];if(newSegments){const oldSegments=scope.context.router._oldSegments[routeDepth];for(const segment in newSegments){if(oldSegments[segment]!==newSegments[segment]){delete scope.memory[key]}}}}const instance=scope.instances[key]||new node.type(scope);instance._self.persistent=!!node.attributes.persistent;instance._self.key=key;instance._attributes=node.attributes;instance._scope=scope;let memory;if(scope.memory){memory=scope.memory[key];if(memory){instance._self.prerendered=true;instance._self.initiated=true;Object.assign(instance,memory);delete scope.memory[key]}}let shouldHydrate=false;const shouldLaunch=instance._self.initiated&&(!instance._self.prerendered||instance._self.persistent&&instance._self.terminated);if(instance._self.terminated){shouldHydrate=true;instance._self.terminated=false}const shouldPrepare=scope.instances[key]===undefined;scope.instances[key]=instance;if(shouldPrepare){if(memory===undefined){instance.prepare&&instance.prepare();if(scope.context.environment.server){instance.initiate&&await instance.initiate();instance._self.initiated=true;instance.launch&&instance.launch()}else{scope.initiationQueue.push(instance)}}shouldHydrate=true}if(scope.hydrationQueue){if(shouldHydrate){shouldLaunch&&instance.launch&&instance.launch();scope.hydrationQueue.push(instance)}else if(instance._self.initiated==true){instance.update&&instance.update()}}if(scope.context.environment.client){scope.renewalQueue.push(instance)}const children=instance.render();if(children&&children.type){children.instance=instance}node.children=[].concat(children);for(let i=0;i<node.children.length;i++){await generateBranch(parent,node.children[i],[...depth,i],scope)}return}if(isFunction(node)){const context=node.type.name?scope.generateContext(node.attributes):node.attributes;const children=node.type(context);node.children=[].concat(children);for(let i=0;i<node.children.length;i++){await generateBranch(parent,node.children[i],[...depth,i],scope)}return}if(node.type){const branch={type:node.type,attributes:node.attributes||{},instance:node.instance,children:[]};if(node.children){for(let i=0;i<node.children.length;i++){await generateBranch(branch,node.children[i],[...depth,i],scope)}}parent.children.push(branch);return}parent.children.push(node)}async function generateTree(node,scope){const tree={type:"div",attributes:{id:"application"},children:[]};await generateBranch(tree,node,[0],scope);return tree};;function getProxyableMethods(target){let properties=new Set;let current=target;do{Object.getOwnPropertyNames(current).map(name=>properties.add(name))}while((current=Object.getPrototypeOf(current))&&current!=Object.prototype)return[...properties.keys()].filter(name=>{return name!=="constructor"&& typeof target[name]==="function"})};;const objectProxyHandler={set(target,name,value){if(isProxyable(name,value)){value._isProxy=true;target[name]=new Proxy(value,this)}else{target[name]=value}if(!name.startsWith("_")){client_client.update()}return true},get(target,name){if(name==="_isProxy")return true;return Reflect.get(...arguments)}};function isProxyable(name,value){return!name.startsWith("_")&&value!==null&& typeof value==="object"&&value._isProxy===undefined&&!(value instanceof Date)}function generateObjectProxy(name,value){if(isProxyable(name,value)){if(typeof value==="object"){for(const key of Object.keys(value)){value[key]=generateObjectProxy(key,value[key])}}return new Proxy(value,objectProxyHandler)}else{return value}}const client_objectProxyHandler=null&&objectProxyHandler;const context1={};for(const key1 of Object.keys(client_state.context)){context1[key1]=generateObjectProxy(key1,client_state.context[key1])}const contextProxyHandler={set(target,name,value){context1[name]=generateObjectProxy(name,value);client_client.update();return true},get(target,name){if(name==="_isProxy")return true;return target[name]===undefined?context1[name]:target[name]}};function generateContext(temporary){return new Proxy(temporary,contextProxyHandler)}const client_context=context1;const environment1={...client_state.environment,client:true,server:false};Object.freeze(environment1);const client_environment=environment1;let timer=null;function windowEvent(name){clearTimeout(timer);setTimeout(()=>{const event=new Event("nullstack."+name);window.dispatchEvent(event)},0)};;const page1={...client_state.page,event:"nullstack.page"};delete client_state.page;const pageProxyHandler={set(target,name,value){if(name==="title"){document.title=value}const result=Reflect.set(...arguments);if(name==="title"){windowEvent("page")}client_client.update();return result}};const proxy1=new Proxy(page1,pageProxyHandler);const client_page=proxy1;function getQueryStringParams(url){const[path,query]=url.split("?");if(query){return query.split("&").reduce((params,param)=>{let[key,value]=param.split("=");params[key]=extractParamValue(value);return params},{})}else{return{}}};;;const segments={};const client_segments=segments;function resetSegments(){for(const key in segments){delete segments[key]}};const paramsProxyHandler={set(target,name,value){const serializedValue=serializeParam(value);target[name]=serializedValue;const search=serializeSearch(target);client_router.url=client_router.path+(search?"?":"")+search;return true},get(target,name){if(target[name]===false)return false;if(client_segments[name]===false)return false;return target[name]||client_segments[name]||""}};const params1={...client_state.params};delete client_state.params;const params_proxy=new Proxy(params1,paramsProxyHandler);function updateParams(query){resetSegments();const delta=getQueryStringParams(query);for(const key of Object.keys({...delta,...params1})){params1[key]=delta[key]}return params_proxy}const client_params=params_proxy;const worker={...client_state.worker};delete client_state.worker;const emptyQueue=Object.freeze([]);const queuesProxyHandler={set(target,name,value){target[name]=value;client_client.update();return true},get(target,name){return target[name]||emptyQueue}};worker.queues=new Proxy({},queuesProxyHandler);const workerProxyHandler={set(target,name,value){if(target[name]!==value){target[name]=value;client_client.update()}return true}};const worker_proxy=new Proxy(worker,workerProxyHandler);if(worker.enabled){window.addEventListener("beforeinstallprompt",function(event){event.preventDefault();worker_proxy.installation=event});async function register(){if("serviceWorker"in navigator){const request=`/service-worker.js`;try{worker_proxy.registration=await navigator.serviceWorker.register(request,{scope:"/"})}catch(error){console.log(error)};}};register()}window.addEventListener("online",()=>{worker_proxy.online=true;if(client_environment.mode==="ssg"){client_router._update(client_router.url)}else{worker_proxy.responsive=true}});window.addEventListener("offline",()=>{worker_proxy.online=false});const client_worker=worker_proxy;function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}let redirectTimer=null;class Router{async _popState(){const{urlWithHash}=extractLocation(window.location.pathname+window.location.search);await this._update(urlWithHash,false)}async _update(target,push){this.previous=this.url;const{url,path,hash,urlWithHash}=extractLocation(target);clearTimeout(redirectTimer);redirectTimer=setTimeout(async()=>{client_page.status=200;if(client_environment.mode==="ssg"){client_worker.fetching=true;const api="/index.json";const endpoint=path==="/"?api:path+api;try{const response=await fetch(endpoint);const payload=await response.json(url);client_client.memory=payload.instances;for(const key in payload.page){client_page[key]=payload.page[key]}client_worker.responsive=true}catch(error){client_worker.responsive=false}client_worker.fetching=false}if(push){history.pushState({},document.title,urlWithHash)}this._url=url;this._hash=hash;this._changed=true;updateParams(url);client_client.update();windowEvent("router")},0)}async _redirect(target){if(target.startsWith("http")){return window.location.href=target}const{url,hash,urlWithHash}=extractLocation(target);if(url!==this._url||this._hash!==hash){await this._update(urlWithHash,true)}if(!hash){window.scroll(0,0)}}get url(){return this._url}set url(target){this._redirect(target)}get path(){return extractLocation(this._url).path}set path(target){this._redirect(target+window.location.search)}constructor(){_defineProperty(this,"event","nullstack.router");_defineProperty(this,"previous",null);_defineProperty(this,"_changed",false);_defineProperty(this,"_segments",client_segments);const{hash,url}=extractLocation(window.location.pathname+window.location.search);this._url=url;this._hash=hash}}const router1=new Router;const client_router=router1;function anchorableElement(element){const links=element.querySelectorAll('a[href^="/"]:not([target])');for(const link of links){if(link.dataset.nullstack)return;link.dataset.nullstack=true;link.addEventListener("click",event=>{if(!event.ctrlKey&&!event.shiftKey&&!event.altKey&&!event.metaKey){event.preventDefault();client_router.url=link.getAttribute("href")}})}};function render(node,options){if(isFalse(node)||node.type==="head"){return document.createComment("")}if(isText(node)){return document.createTextNode(node)}const svg=options&&options.svg||node.type==="svg";let element;if(svg){element=document.createElementNS("http://www.w3.org/2000/svg",node.type)}else{element=document.createElement(node.type)}if(node.instance){node.instance._self.element=element}for(let name in node.attributes){if(name==="html"){element.innerHTML=node.attributes[name];anchorableElement(element)}else if(name.startsWith("on")){if(node.attributes[name]!==undefined){const eventName=name.replace("on","");const key="_event."+eventName;node[key]=event=>{if(node.attributes.default!==true){event.preventDefault()}node.attributes[name]({...node.attributes,event})};element.addEventListener(eventName,node[key])}}else{const type=typeof node.attributes[name];if(type!=="object"&&type!=="function"){if(name!="value"&&node.attributes[name]===true){element.setAttribute(name,"")}else if(name=="value"||node.attributes[name]!==false&&node.attributes[name]!==null&&node.attributes[name]!==undefined){element.setAttribute(name,node.attributes[name])}}}}if(!node.attributes.html){for(let i=0;i<node.children.length;i++){const child=render(node.children[i],{svg});element.appendChild(child)}if(node.type=="select"){element.value=node.attributes.value}}return element};;function rerender(selector,current,next){current=current===undefined?client_client.virtualDom:current;next=next===undefined?client_client.nextVirtualDom:next;if(next.instance){next.instance._self.element=selector}if(!client_client.hydrated&&selector){for(const element of selector.childNodes){if(element.tagName&&element.tagName.toLowerCase()=="textarea"&&element.childNodes.length==0){element.appendChild(document.createTextNode(""))}if(element.COMMENT_NODE===8&&element.textContent==="#"){selector.removeChild(element)}}}if(isFalse(current)&&isFalse(next)){return}if((isFalse(current)||isFalse(next))&&current!=next){const nextSelector=render(next);return selector.replaceWith(nextSelector)}if(current.type=="head"&&next.type=="head"){return}if(current.type=="head"||next.type=="head"){const nextSelector=render(next);return selector.replaceWith(nextSelector)}if(current.type!==next.type){const nextSelector=render(next);return selector.replaceWith(nextSelector)}if(isText(current)&&isText(next)){if(current!=next){selector.nodeValue=next}return}if(current.type===next.type){const attributeNames=Object.keys({...current.attributes,...next.attributes});for(const name of attributeNames){if(name==="html"){if(next.attributes[name]!==current.attributes[name]){selector.innerHTML=next.attributes[name]}anchorableElement(selector)}else if(name==="checked"){if(next.attributes[name]!==selector.value){selector.checked=next.attributes[name]}}else if(name==="value"){if(next.attributes[name]!==selector.value){selector.value=next.attributes[name]}}else if(name.startsWith("on")){const eventName=name.replace("on","");const key="_event."+eventName;selector.removeEventListener(eventName,current[key]);if(next.attributes[name]){next[key]=event=>{if(next.attributes.default!==true){event.preventDefault()}next.attributes[name]({...next.attributes,event})};selector.addEventListener(eventName,next[key])}}else{const type=typeof next.attributes[name];if(type!=="object"&&type!=="function"){if(current.attributes[name]!==undefined&&next.attributes[name]===undefined){selector.removeAttribute(name)}else if(current.attributes[name]!==next.attributes[name]){if(name!="value"&&next.attributes[name]===false||next.attributes[name]===null||next.attributes[name]===undefined){selector.removeAttribute(name)}else if(name!="value"&&next.attributes[name]===true){selector.setAttribute(name,"")}else{selector.setAttribute(name,next.attributes[name])}}}}}if(next.attributes.html)return;const limit=Math.max(current.children.length,next.children.length);if(next.children.length>current.children.length){for(let i=0;i<current.children.length;i++){rerender(selector.childNodes[i],current.children[i],next.children[i])}for(let i1=current.children.length;i1<next.children.length;i1++){const nextSelector=render(next.children[i1]);selector.appendChild(nextSelector)}}else if(current.children.length>next.children.length){for(let i=0;i<next.children.length;i++){rerender(selector.childNodes[i],current.children[i],next.children[i])}for(let i2=current.children.length-1;i2>=next.children.length;i2--){selector.removeChild(selector.childNodes[i2])}}else{for(let i=limit-1;i> -1;i--){if(typeof selector.childNodes[i]==="undefined"){console.error(`${current.type.toUpperCase()} expected tag ${current.children[i].type.toUpperCase()} to be child at index ${i} but instead found undefined. This error usually happens because of an invalid HTML hierarchy or changes in comparisons after serialization.`,selector);throw new Error("Virtual DOM does not match the DOM.");return}rerender(selector.childNodes[i],current.children[i],next.children[i])}}if(next.type=="textarea"){selector.value=next.children.join("")}if(next.type=="select"){selector.value=next.attributes.value}}};;const client={};client.initialized=false;client.hydrated=false;client.initializer=null;client.instances={};client_context.instances=client.instances;client.initiationQueue=[];client.renewalQueue=[];client.hydrationQueue=[];client.realHydrationQueue=[];client.virtualDom={};client.selector=null;client.events={};client.generateContext=generateContext;client.renderQueue=null;client.update=async function update(){if(client.initialized){clearInterval(client.renderQueue);client.renderQueue=setTimeout(async()=>{const scope=client;scope.context=client_context;scope.plugins=loadPlugins(scope);client.initialized=false;client.renewalQueue=[];client.nextVirtualDom=await generateTree(client.initializer(),scope);rerender(client.selector);client.virtualDom=client.nextVirtualDom;client.nextVirtualDom=null;client.processLifecycleQueues()},16)}};client.processLifecycleQueues=async function processLifecycleQueues(){if(!client.initialized){client.initialized=true;client.hydrated=true}let shouldUpdate=false;while(client.initiationQueue.length){const instance=client.initiationQueue.shift();instance.initiate&&await instance.initiate();instance._self.initiated=true;instance.launch&&instance.launch();shouldUpdate=true}shouldUpdate&&client.update();shouldUpdate=false;while(client.realHydrationQueue.length){shouldUpdate=true;const instance=client.realHydrationQueue.shift();instance.hydrate&&await instance.hydrate();instance._self.hydrated=true}shouldUpdate&&client.update();shouldUpdate=false;while(client.hydrationQueue.length){shouldUpdate=true;const instance=client.hydrationQueue.shift();client.realHydrationQueue.push(instance)}shouldUpdate&&client.update();for(const key in client.instances){const instance=client.instances[key];if(!client.renewalQueue.includes(instance)&&!instance._self.terminated){instance.terminate&&await instance.terminate();if(instance._self.persistent){instance._self.terminated=true}else{delete client.instances[key]}}}client_router._changed=false};const client_client=client;const instanceProxyHandler={get(target,name){var ref,ref1,ref2;if(name==="_isProxy")return true;if(((ref=target.constructor[name])===null||ref===void 0?void 0:ref.name)==="_invoke")return target.constructor[name].bind(target.constructor);if(!((ref1=target[name])===null||ref1===void 0?void 0:(ref2=ref1.name)===null||ref2===void 0?void 0:ref2.startsWith("_"))&&!name.startsWith("_")&& typeof target[name]=="function"&&name!=="constructor"){const{[name]:named}={[name]:args=>{const context=generateContext({...target._attributes,...args,self:target._self});return target[name](context)}};return named}return Reflect.get(...arguments)},set(target,name,value){var ref;if(!(value===null||value===void 0?void 0:(ref=value.name)===null||ref===void 0?void 0:ref.startsWith("_"))&&!name.startsWith("_")){target[name]=generateObjectProxy(name,value);client_client.update()}else{target[name]=value}return true}};const client_instanceProxyHandler=instanceProxyHandler;const prefix="nullstack";const shared_prefix=prefix;function invoke(name,hash){return async function _invoke(params={}){var ref;let payload;client_worker.fetching=true;if(Object.isFrozen(client_worker.queues[name])){client_worker.queues[name]=[params]}else{client_worker.queues[name]=[...client_worker.queues[name],params]}const finalHash=hash===this.hash?hash:`${hash}-${this.hash}`;let url=`${client_worker.api}/${shared_prefix}/${finalHash}/${name}.json`;let body=JSON.stringify(params||{});const options={headers:client_worker.headers,mode:"cors",cache:"no-cache",credentials:"same-origin",redirect:"follow",referrerPolicy:"no-referrer"};if(/get[A-Z]([*]*)/.test(name)){options.method="GET";url+=`?payload=${encodeURIComponent(body)}`}else{options.body=body;if(/patch[A-Z]([*]*)/.test(name)){options.method="PATCH"}else if(/put[A-Z]([*]*)/.test(name)){options.method="PUT"}else if(/delete[A-Z]([*]*)/.test(name)){options.method="DELETE"}else{options.method="POST"}}try{const response=await fetch(url,options);client_page.status=response.status;const text=await response.text();payload=deserialize(text).result;client_worker.responsive=true}catch(e){client_worker.responsive=false}if(((ref=client_worker.queues[name])===null||ref===void 0?void 0:ref.length)===1){delete client_worker.queues[name]}else{client_worker.queues[name]=client_worker.queues[name].filter(task=>task!==params)}client_worker.fetching=!!Object.keys(client_worker.queues).length;return payload}};;const project={...client_state.project};delete client_state.project;Object.freeze(project);const client_project=project;const settings={...client_state.settings};delete client_state.settings;Object.freeze(settings);const client_settings=settings;function client_defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}client_context.page=client_page;client_context.router=client_router;client_context.settings=client_settings;client_context.worker=client_worker;client_context.params=client_params;client_context.project=client_project;client_context.environment=client_state.environment;client_client.memory=client_state.instances;const scope1=client_client;scope1.generateContext=generateContext;scope1.context=client_context;client_client.plugins=loadPlugins(scope1);class Nullstack{static start(Starter){setTimeout(async()=>{window.addEventListener("popstate",()=>{client_router._popState()});client_client.routes={};updateParams(client_router.url);client_client.currentInstance=null;client_client.initializer=()=>element_element(Starter);client_client.selector=document.querySelector("#application");if(client_environment.mode==="spa"){scope1.plugins=loadPlugins(scope1);client_worker.online=navigator.onLine;typeof client_context.start==="function"&&await client_context.start(client_context);client_context.environment=client_environment;client_client.virtualDom=await generateTree(client_client.initializer(),scope1);const body=render(client_client.virtualDom);client_client.selector.replaceWith(body);client_client.selector=body}else{client_client.virtualDom=await generateTree(client_client.initializer(),scope1);client_context.environment=client_environment;scope1.plugins=loadPlugins(scope1);client_worker.online=navigator.onLine;typeof client_context.start==="function"&&await client_context.start(client_context);client_client.nextVirtualDom=await generateTree(client_client.initializer(),scope1);rerender(client_client.selector);client_client.virtualDom=client_client.nextVirtualDom;client_client.nextVirtualDom=null}client_client.processLifecycleQueues();delete client_state.context},0);return generateContext({})}render(){return false}constructor(){client_defineProperty(this,"_self",{prerendered:false,initiated:false,hydrated:false,terminated:false});const methods=getProxyableMethods(this);const proxy=new Proxy(this,client_instanceProxyHandler);for(const method of methods){this[method]=this[method].bind(proxy)}return proxy}}client_defineProperty(Nullstack,"element",element_element);client_defineProperty(Nullstack,"invoke",invoke);client_defineProperty(Nullstack,"fragment",fragment);client_defineProperty(Nullstack,"use",usePlugins("client"));const nullstack=Nullstack;function ComicContainer_defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}class ComicContainer extends nullstack{render({children,className}){return nullstack.element("div",{class:`comic-container ${className}`},children)}}ComicContainer_defineProperty(ComicContainer,"hash","675fad263af0932e3c5d35bdf24ec19b");const comic_container_ComicContainer=ComicContainer;function ComicBox_defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}class ComicBox extends nullstack{render({children,bgColor,patternColor,className}){return nullstack.element("div",{class:`comic-box comic-box-${bgColor} comic-box-pattern-${patternColor} ${className}`},children)}}ComicBox_defineProperty(ComicBox,"hash","58abff4932edab7f65b65d7afc1f5ae2");const comic_box_ComicBox=ComicBox;function ProgressBar_defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}class ProgressBar extends nullstack{render({level}){return nullstack.element("div",{class:`progress-bar progress-bar-fill-${level}`})}}ProgressBar_defineProperty(ProgressBar,"hash","7825cac1a3eb2b65d8e1d4fa37c6086b");const progress_bar_ProgressBar=ProgressBar;function Application_defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}class Application extends nullstack{prepare({page}){page.locale="en-US"}async initiate(context){await this.startDB(context);this.person=await this.getPerson(context);this.skills=await this.getSkills(context);this.career=await this.getCareer(context)}async clickMe(){await this.getPerson()}renderHeader(){return nullstack.element("section",{class:"header"},this.person&&nullstack.element(comic_box_ComicBox,{bgColor:"color-three",patternColor:"pattern-color-one",className:"me-image-container"},nullstack.element("img",{alt:"my-photo",src:this.person.avatar,class:"me-image"})),this.person&&nullstack.element(comic_box_ComicBox,{bgColor:"color-two",patternColor:"pattern-color-one"},nullstack.element("h2",{class:"color-light font-size-xl text-shadow-big-color-dark text-align-center",style:"line-height: 1.2"},`A GREAT ${this.person.job} FOR YOUR COMPANY`)))}renderSkillListItem({children}){return nullstack.element("li",{class:"font-size-l color-light text-shadow-medium-color-dark skill-list-item"},children)}renderArticle(){const SkillListItem=this.renderSkillListItem;return nullstack.element("article",{class:"article"},this.person&&nullstack.element("section",{class:"personal-info"},nullstack.element("h1",{class:"font-size-xl text-shadow-big-color-dark color-two stroke-dark"},`${this.person.firstName} ${this.person.lastName}`),nullstack.element("h2",{class:"font-size-l"},`${this.person.job}`),nullstack.element("p",{class:"font-size-m"},`${this.person.city}, ${this.person.country}`)),nullstack.element("section",null,nullstack.element(comic_box_ComicBox,{className:"skills-container",bgColor:"color-four",patternColor:"pattern-color-two"},nullstack.element("h2",{class:"font-size-xl text-shadow-big-color-dark color-three stroke-dark"},"SKILLS"),this.skills&&nullstack.element("ul",null,this.skills.skillNames.map((skill,index)=>nullstack.element(SkillListItem,null,nullstack.element("span",{class:"text-align-right"},skill),nullstack.element(progress_bar_ProgressBar,{level:this.skills.skillLevels[index]})))))))}renderWorkLi({year,description}){return nullstack.element("li",{class:"work-li"},nullstack.element("span",{class:"font-size-l color-light text-shadow-medium-color-dark"},year),nullstack.element("span",{class:"font-size-s font-bold"},description))}renderAside(){const WorkLi=this.renderWorkLi;return nullstack.element("aside",{class:"aside"},nullstack.element(comic_box_ComicBox,{className:"aside-box",bgColor:"color-one",patternColor:"pattern-color-two"},nullstack.element("h2",{class:"font-size-xl text-shadow-big-color-dark color-three stroke-dark"},"WORK"),this.career&&nullstack.element("ol",null,this.career.careerDescription.map((careerItem,index)=>nullstack.element(WorkLi,{year:this.career.careerYears[index],description:careerItem})))))}renderMain(){const Aside=this.renderAside;const Article=this.renderArticle;return nullstack.element("main",{class:"main"},nullstack.element(Article,null),nullstack.element(Aside,null))}renderFooterLi({children}){return nullstack.element("li",{class:"font-size-s font-bold"},children)}renderFooter(){const FooterLi=this.renderFooterLi;return nullstack.element(comic_box_ComicBox,{className:"footer",bgColor:"color-three",patternColor:"pattern-color-one"},nullstack.element("img",{alt:"contact-me-1",src:"./images/phone-1.png"}),this.person&&nullstack.element("ul",{class:"contact"},nullstack.element(FooterLi,null,`Phone: ${this.person.phone}`),nullstack.element(FooterLi,null,`Email: ${this.person.email}`),nullstack.element(FooterLi,null,"LinkedIn:"," ",nullstack.element("a",{class:"anchor",href:this.person.linkedin},`${this.person.firstName} ${this.person.lastName}`)),this.person.telegram&&nullstack.element(FooterLi,null,`Telegram: ${this.person.telegram}`)),nullstack.element("img",{alt:"contact-me-2",src:"./images/phone-2.png"}))}render(){const Footer=this.renderFooter;const Main=this.renderMain;const Header=this.renderHeader;return nullstack.element(nullstack.fragment,null,nullstack.element(comic_container_ComicContainer,null,nullstack.element(Header,null),nullstack.element(Main,null),nullstack.element(Footer,null)))}constructor(...args){super(...args);Application_defineProperty(this,"person",{});Application_defineProperty(this,"skills",{});Application_defineProperty(this,"career",{})}}Application_defineProperty(Application,"hash","f19980a0ba1e7d540e72c85bba3f57a7");Application_defineProperty(Application,"startDB",nullstack.invoke("startDB","f19980a0ba1e7d540e72c85bba3f57a7"));Application_defineProperty(Application,"getPerson",nullstack.invoke("getPerson","f19980a0ba1e7d540e72c85bba3f57a7"));Application_defineProperty(Application,"getCareer",nullstack.invoke("getCareer","f19980a0ba1e7d540e72c85bba3f57a7"));Application_defineProperty(Application,"getSkills",nullstack.invoke("getSkills","f19980a0ba1e7d540e72c85bba3f57a7"));const src_Application=Application;const client_context_0=nullstack.start(src_Application);client_context_0.start=async function start(){};const client_0=null&&client_context_0})()